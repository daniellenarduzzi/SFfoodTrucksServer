// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "San Francisco Food Trucks Server",
    "version": "1.0.0"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "paths": {
    "/foodtrucks\u0026location={location}": {
      "get": {
        "description": "Optional extended description in Markdown.",
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of food Trucks.",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The ID of the user to return.",
            "name": "location",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API description in Markdown.",
    "title": "San Francisco Food Trucks Server",
    "version": "1.0.0"
  },
  "host": "api.example.com",
  "basePath": "/v1",
  "paths": {
    "/foodtrucks\u0026location={location}": {
      "get": {
        "description": "Optional extended description in Markdown.",
        "produces": [
          "application/json"
        ],
        "summary": "Returns a list of food Trucks.",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The ID of the user to return.",
            "name": "location",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}`))
}
